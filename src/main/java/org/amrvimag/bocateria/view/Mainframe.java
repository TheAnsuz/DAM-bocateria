package org.amrvimag.bocateria.view;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.amrvimag.bocateria.Configuration;
import org.amrvimag.bocateria.ResourceIO;

/**
 *
 * @author Adrian MRV. aka AMRV || Ansuz
 */
public class Mainframe extends javax.swing.JFrame {

    /**
     * Creates new form Mainframe
     */
    public Mainframe() {
        initComponents();
        buttonConfiguration.setIcon(new ImageIcon(ResourceIO
                .resourceImage("image/settings.png", 24, 24)));

        super.setTitle(Configuration
                .getDefaultConfig("aplication.name", "Mi tienda"));
        super.setIconImage(ResourceIO.resourceImage("image/icon.png", 32, 32));
        super.setMinimumSize(super.getSize());
        super.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        super.setMaximumSize(super.getSize());
    }

    private JButton selectedComponent = null;

    public void setProductTypeContent(JButton... buttons) {
        panelProductType.removeAll();
        for (JButton comp : buttons) {
            comp.addActionListener((ActionEvent e) -> {
                if (comp.equals(selectedComponent))
                    selectedComponent = null;
                else
                    selectedComponent = comp;
                productTypeSelected(selectedComponent);
            });
            panelProductType.add(comp);
        }
    }

    public boolean hasSelectedProductType() {
        return selectedComponent != null;
    }

    public JButton getSelectedProductType() {
        return selectedComponent;
    }

    public void productTypeSelected(JButton button) {
        System.out.println(button);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        buttonEmployee = new javax.swing.JLabel();
        buttonConfiguration = new javax.swing.JLabel();
        panelTicket = new javax.swing.JPanel();
        panelScrollItemView = new javax.swing.JScrollPane();
        listItemView = new javax.swing.JList<>();
        buttonPagarEfectivo = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        buttonPagarTarjeta = new javax.swing.JButton();
        panelProducts = new javax.swing.JPanel();
        panelScrollProduct = new javax.swing.JScrollPane();
        listItemSelect = new javax.swing.JList<>();
        panelScrollProductType = new javax.swing.JScrollPane();
        panelProductType = new javax.swing.JPanel();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelHeader.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Component.borderColor")));
        panelHeader.setMaximumSize(new java.awt.Dimension(32767, 32));
        panelHeader.setMinimumSize(new java.awt.Dimension(383, 32));
        panelHeader.setPreferredSize(new java.awt.Dimension(383, 32));

        buttonEmployee.setText("${emplado}");
        buttonEmployee.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 0));

        buttonConfiguration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        buttonConfiguration.setText("Configuraci√≥n");

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addComponent(buttonEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 609, Short.MAX_VALUE)
                .addComponent(buttonConfiguration)
                .addContainerGap())
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(buttonEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(buttonConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelTicket.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Component.borderColor")));

        listItemView.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        panelScrollItemView.setViewportView(listItemView);

        buttonPagarEfectivo.setText("Pagar en efectivo");
        buttonPagarEfectivo.addActionListener(formListener);

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(formListener);

        buttonPagarTarjeta.setText("Pagar con tarjeta");

        javax.swing.GroupLayout panelTicketLayout = new javax.swing.GroupLayout(panelTicket);
        panelTicket.setLayout(panelTicketLayout);
        panelTicketLayout.setHorizontalGroup(
            panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTicketLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelScrollItemView)
                    .addGroup(panelTicketLayout.createSequentialGroup()
                        .addComponent(buttonPagarEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonPagarTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelTicketLayout.setVerticalGroup(
            panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTicketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelScrollItemView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelTicketLayout.createSequentialGroup()
                        .addComponent(buttonPagarEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPagarTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelProducts.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Component.borderColor")));

        listItemSelect.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        panelScrollProduct.setViewportView(listItemSelect);

        panelProductType.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        panelScrollProductType.setViewportView(panelProductType);

        javax.swing.GroupLayout panelProductsLayout = new javax.swing.GroupLayout(panelProducts);
        panelProducts.setLayout(panelProductsLayout);
        panelProductsLayout.setHorizontalGroup(
            panelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelScrollProductType)
                    .addComponent(panelScrollProduct))
                .addContainerGap())
        );
        panelProductsLayout.setVerticalGroup(
            panelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelScrollProductType, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelScrollProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == buttonCancelar) {
                Mainframe.this.buttonCancelarActionPerformed(evt);
            }
            else if (evt.getSource() == buttonPagarEfectivo) {
                Mainframe.this.buttonPagarEfectivoActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonPagarEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPagarEfectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPagarEfectivoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JLabel buttonConfiguration;
    private javax.swing.JLabel buttonEmployee;
    private javax.swing.JButton buttonPagarEfectivo;
    private javax.swing.JButton buttonPagarTarjeta;
    private javax.swing.JList<String> listItemSelect;
    private javax.swing.JList<String> listItemView;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelProductType;
    private javax.swing.JPanel panelProducts;
    private javax.swing.JScrollPane panelScrollItemView;
    private javax.swing.JScrollPane panelScrollProduct;
    private javax.swing.JScrollPane panelScrollProductType;
    private javax.swing.JPanel panelTicket;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        FlatDarculaLaf.setup();
        FlatDarkLaf.setup();
        FlatLightLaf.setup();
        try {
            //        Launcher.main(args);
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
        }

        Mainframe frame = new Mainframe();
        frame.setVisible(true);
    }
}
